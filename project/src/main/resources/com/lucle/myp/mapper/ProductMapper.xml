<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lucle.myp.mapper.ProductMapper">

	<insert id="insertProduct"
		parameterType="com.lucle.myp.domain.MarketVo">
		<!-- INSERT INTO MARKET (num, PRODUCTNAME, MARKETNAME, URL, IMGURL, WON, 
			DELIVERY, DELIVERYFEE, KEYWORD, VISIBLE, GROUPBUYING, DESCRIPTION) VALUES 
			(seq_market.nextval, #{productName}, #{marketName}, #{url}, #{imgUrl}, #{won}, 
			null, null, #{keyword}, 1, 1, #{description}) -->

		BEGIN
		INSERT INTO MARKET (num, PRODUCTNAME, MARKETNAME, URL,
		IMGURL,
		WON, DELIVERY,
		DELIVERYFEE, KEYWORD, VISIBLE, GROUPBUYING,
		DESCRIPTION)
		VALUES (seq_market.nextval, #{productName}, #{marketName},
		#{url},
		#{imgUrl}, #{won},
		null, null, #{keyword}, 1, 1,
		#{description});

		INSERT
		INTO CATEGORY (LARGE, MEDIUM, SMALL, SUB_CATEGORY, CATECODE, NUM,
		tier, catename, CATEPARENT, cno)
		VALUES
		(#{large}, #{medium}, #{small},
		#{sub_category}, #{large}||#{medium}||#{small}||#{sub_category},
		seq_market.CURRVAL, 0, null,
		#{large}||#{medium}||#{small}||#{sub_category}, seq_category.nextval);

		INSERT
		INTO GROUPBUYING (GNO, TITLE, CONTENT, REGIDATE, GOALDATE,
		GOALTARGET, PERSONNUM, NUM)
		VALUES
		(seq_GROUPBUYING.nextval, null, null,
		sysdate, ADD_MONTHS(SYSDATE, 1), #{goaltarget}, 0,
		seq_market.currval);
		END;
	</insert>

	<select id="selectAllProducts"
		resultType="com.lucle.myp.domain.MarketVo">
		SELECT *
		FROM MARKET m
		JOIN CATEGORY c ON m.NUM = c.NUM
		JOIN
		GROUPBUYING g ON m.NUM = g.NUM
		ORDER BY m.NUM ASC
	</select>

	<select id="selectProductById" parameterType="int"
		resultType="com.lucle.myp.domain.MarketVo">
		SELECT
		M.NUM AS M_NUM,
		M.PRODUCTNAME,
		M.MARKETNAME,
		M.URL,
		M.IMGURL,
		M.WON,
		M.DELIVERY,
		M.DELIVERYFEE,
		M.KEYWORD,
		M.VISIBLE AS M_VISIBLE,
		M.GROUPBUYING,
		M.DESCRIPTION,
		M.CATEGORY,
		C.NUM AS C_NUM,
		C.LARGE,
		C.MEDIUM,
		C.SMALL,
		C.SUB_CATEGORY,
		C.TIER,
		C.CATENAME,
		C.CATECODE,
		C.CATEPARENT,
		C.CNO
		FROM
		MARKET M
		INNER JOIN CATEGORY C ON M.NUM = C.NUM
		WHERE
		M.VISIBLE = 1 AND M.NUM = #{m_num}
	</select>

	<update id="updateProduct"
		parameterType="com.lucle.myp.domain.MarketVo">
		UPDATE MARKET
		SET PRODUCTNAME = #{productName},
		MARKETNAME = #{marketName},
		URL = #{url},
		IMGURL = #{imgUrl},
		WON =
		#{won},
		KEYWORD =
		#{keyword},
		DESCRIPTION = #{description}
		WHERE NUM =
		#{m_num}
	</update>

	<update id="updateCategory"
		parameterType="com.lucle.myp.domain.MarketVo">
		UPDATE CATEGORY
		SET large = #{large},
		medium = #{medium},
		small = #{small},
		sub_category = #{sub_category},
		catecode = #{large}||#{medium}||#{small}||#{sub_category},
		cateparent = #{large}||#{medium}||#{small}||#{sub_category}
		WHERE NUM = #{m_num}
	</update>

	<delete id="deleteProductById" parameterType="int">
		DELETE FROM MARKET
		WHERE NUM = #{num}
	</delete>

	<select id="getProductDetails"
		resultType="com.lucle.myp.domain.MarketVo">
    <![CDATA[
    SELECT * FROM (
        SELECT detailed.*, ROWNUM rnum FROM (
            SELECT sub.*, DENSE_RANK() OVER (ORDER BY CATEGORY_VIEW_COUNT DESC) as CATEGORY_RANK
            FROM (
                SELECT M.*, MV.VNO, MV.VIEWDATE, MV.PCATEGORY, G.TITLE, G.CONTENT, G.REGIDATE, G.GOALDATE, G.GOALTARGET, G.PERSONNUM, C.LARGE, C.MEDIUM, C.SMALL, C.SUB_CATEGORY, c.catecode, c.catename, c.tier, c.cateparent, c.cno,
                    COUNT(MV.PCATEGORY) OVER (PARTITION BY MV.PCATEGORY) as CATEGORY_VIEW_COUNT,
                    ROW_NUMBER() OVER (PARTITION BY M.NUM ORDER BY MV.VNO) as rn
                FROM MARKET M
                JOIN MARKETVIEW MV ON M.NUM = MV.NUM
                JOIN GROUPBUYING G ON M.NUM = G.NUM
                JOIN CATEGORY C ON M.NUM = C.NUM
                WHERE MV.PCATEGORY IS NOT NULL
                GROUP BY M.NUM, M.PRODUCTNAME, M.MARKETNAME, M.URL, M.IMGURL, M.WON, M.DELIVERY, M.DELIVERYFEE, M.KEYWORD, M.VISIBLE, M.GROUPBUYING, M.DESCRIPTION, m.category, MV.VNO, MV.ID, MV.VIEWDATE, MV.VISIBLE, MV.PCATEGORY, G.GNO, G.TITLE, G.CONTENT, G.REGIDATE, G.GOALDATE, G.GOALTARGET, G.PERSONNUM, G.NUM, C.LARGE, C.MEDIUM, C.SMALL, C.SUB_CATEGORY, C.NUM, c.catecode, c.catename, c.tier, c.cateparent, c.cno
            ) sub
            WHERE sub.rn = 1
        ) detailed
    )
    WHERE rnum BETWEEN #{offset} + 1 AND #{offset} + #{pageSize}
    ]]>
	</select>

	<select id="selectProductsByLargeCategory"
		resultType="com.lucle.myp.domain.MarketVo">
		SELECT m.*, c.LARGE, g.*
		FROM MARKET m
		JOIN CATEGORY c ON
		m.NUM = c.NUM
		LEFT JOIN GROUPBUYING g ON m.NUM = g.NUM
		WHERE c.LARGE =
		#{large}
	</select>

	<select id="selectProductsByMediumCategory"
		resultType="com.lucle.myp.domain.MarketVo">
		SELECT m.*, c.MEDIUM, g.*
		FROM MARKET m
		JOIN CATEGORY c ON
		m.NUM = c.NUM
		LEFT JOIN GROUPBUYING g ON m.NUM = g.NUM
		WHERE c.MEDIUM =
		#{medium}
	</select>

	<select id="selectProductsBySmallCategory"
		resultType="com.lucle.myp.domain.MarketVo">
		SELECT m.*, c.SMALL, g.*
		FROM MARKET m
		JOIN CATEGORY c ON
		m.NUM = c.NUM
		LEFT JOIN GROUPBUYING g ON m.NUM = g.NUM
		WHERE c.SMALL =
		#{small}
	</select>

	<select id="selectProductsBySubCategory"
		resultType="com.lucle.myp.domain.MarketVo">
		SELECT m.*, c.SUB_CATEGORY, g.*
		FROM MARKET m
		JOIN CATEGORY c
		ON m.NUM = c.NUM
		LEFT JOIN GROUPBUYING g ON m.NUM = g.NUM
		WHERE
		c.SUB_CATEGORY = #{sub_category}
	</select>

	<select id="cateList" resultType="com.lucle.myp.domain.MarketVo">

		select * from category order by
		catecode

	</select>

	<select id="findProductsByCategory"
		resultType="com.lucle.myp.domain.MarketVo">
		SELECT
		market_query.*
		FROM (
		SELECT
		m.NUM AS MARKET_NUM,
		m.PRODUCTNAME,
		m.MARKETNAME,
		m.URL,
		m.IMGURL,
		m.WON,
		m.DELIVERY,
		m.DELIVERYFEE,
		m.KEYWORD,
		m.VISIBLE AS MARKET_VISIBLE,
		m.GROUPBUYING,
		m.DESCRIPTION,
		m.CATEGORY AS MARKET_CATEGORY,
		c.LARGE AS CATEGORY_LARGE,
		c.MEDIUM AS CATEGORY_MEDIUM,
		c.SMALL AS CATEGORY_SMALL,
		c.SUB_CATEGORY
		AS CATEGORY_SUB_CATEGORY,
		c.TIER,
		c.CATENAME,
		c.CATECODE,
		c.CATEPARENT,
		c.CNO,
		g.GNO,
		g.TITLE AS GROUPBUYING_TITLE,
		g.CONTENT AS
		GROUPBUYING_CONTENT,
		g.REGIDATE AS GROUPBUYING_REGIDATE,
		g.GOALDATE,
		g.GOALTARGET,
		g.PERSONNUM,
		g.NUM AS GROUPBUYING_NUM,
		ROW_NUMBER()
		OVER(PARTITION BY m.PRODUCTNAME ORDER BY m.NUM) AS rn
		FROM
		MARKET m
		JOIN
		CATEGORY c ON m.num = c.num
		JOIN GROUPBUYING g ON m.NUM = g.NUM
		WHERE
		c.CATECODE = #{cateCode}
		) market_query
		WHERE
		market_query.rn = 1
	</select>

	<select id="rankedViewByUser"
		resultType="com.lucle.myp.domain.MarketVo">
		SELECT * FROM (
		SELECT inner_query.*, ROWNUM rnum FROM (
		SELECT
		market_query.*,
		F.Frequency,
		F.CategoryRank
		FROM (
		SELECT
		m.NUM AS
		MARKET_NUM,
		m.PRODUCTNAME,
		m.MARKETNAME,
		m.URL,
		m.IMGURL,
		m.WON,
		m.DELIVERY,
		m.DELIVERYFEE,
		m.KEYWORD,
		m.VISIBLE AS MARKET_VISIBLE,
		m.GROUPBUYING,
		m.DESCRIPTION,
		m.CATEGORY AS MARKET_CATEGORY,
		c.LARGE AS
		CATEGORY_LARGE,
		c.MEDIUM AS CATEGORY_MEDIUM,
		c.SMALL AS CATEGORY_SMALL,
		c.SUB_CATEGORY AS CATEGORY_SUB_CATEGORY,
		c.TIER,
		c.CATENAME,
		c.CATECODE,
		c.CATEPARENT,
		c.CNO,
		g.GNO,
		g.TITLE AS GROUPBUYING_TITLE,
		g.CONTENT AS
		GROUPBUYING_CONTENT,
		g.REGIDATE AS GROUPBUYING_REGIDATE,
		g.GOALDATE,
		g.GOALTARGET,
		g.PERSONNUM,
		g.NUM AS GROUPBUYING_NUM,
		ROW_NUMBER()
		OVER(PARTITION BY m.PRODUCTNAME ORDER BY m.NUM) AS rn
		FROM MARKET m
		JOIN CATEGORY c ON m.num = c.num
		JOIN GROUPBUYING g ON m.NUM = g.NUM
		)
		market_query
		JOIN (
		SELECT
		MV.PCATEGORY,
		COUNT(*) AS Frequency,
		ROW_NUMBER() OVER(PARTITION BY MV.PCATEGORY ORDER BY COUNT(*) DESC) AS
		CategoryRank
		FROM MARKETVIEW MV
		JOIN USERS U ON MV.ID = U.ID
		WHERE U.ID =
		#{id}
		GROUP BY MV.PCATEGORY
		) F ON market_query.MARKET_CATEGORY =
		F.PCATEGORY
		WHERE market_query.rn = 1
		ORDER BY F.Frequency DESC,
		F.CategoryRank
		) inner_query
		) WHERE rnum BETWEEN #{offset} + 1 AND
		#{offset} + #{pageSize}
	</select>

	<select id="getTotalCount" parameterType="String"
		resultType="int">
		SELECT COUNT(DISTINCT NUM) FROM marketview WHERE id = #{id}
	</select>

	<select id="getTotalCount2" resultType="int">
		SELECT COUNT(num) FROM
		market
	</select>

	<select id="getStatList"
		resultType="com.lucle.myp.domain.SearchStatVo">
		<![CDATA[
SELECT   b.CATEGORY,   
         COUNT(*) AS CATEGORY_COUNT,   
         SUM(CASE WHEN u.AGE BETWEEN 10 AND 19 THEN 1 ELSE 0 END) AS teens,   
         SUM(CASE WHEN u.AGE BETWEEN 20 AND 29 THEN 1 ELSE 0 END) AS twenties,   
         SUM(CASE WHEN u.AGE BETWEEN 30 AND 39 THEN 1 ELSE 0 END) AS thirties,   
         SUM(CASE WHEN u.AGE BETWEEN 40 AND 49 THEN 1 ELSE 0 END) AS forties,   
         SUM(CASE WHEN u.AGE BETWEEN 50 AND 59 THEN 1 ELSE 0 END) AS fifties,   
         SUM(CASE WHEN u.AGE >= 60 THEN 1 ELSE 0 END) AS aboveSixty,   
         SUM(CASE WHEN u.GENDER = 1 THEN 1 ELSE 0 END) AS male,   
         SUM(CASE WHEN u.GENDER = 0 THEN 1 ELSE 0 END) AS female,   
         SUM(CASE WHEN u.ADDRESS LIKE '%서울%' THEN 1 ELSE 0 END) AS SEOUL,   
         SUM(CASE WHEN u.ADDRESS LIKE '%경기%' THEN 1 ELSE 0 END) AS GYEONGGI,
         SUM(CASE WHEN u.ADDRESS LIKE '%인천%' THEN 1 ELSE 0 END) AS incheon,
         SUM(CASE WHEN u.ADDRESS LIKE '%부산%' THEN 1 ELSE 0 END) AS busan,
         SUM(CASE WHEN u.ADDRESS LIKE '%대구%' THEN 1 ELSE 0 END) AS deagu,
         SUM(CASE WHEN u.ADDRESS LIKE '%광주%' THEN 1 ELSE 0 END) AS gwangju,
         SUM(CASE WHEN u.ADDRESS LIKE '%대전%' THEN 1 ELSE 0 END) AS deajeon,
         SUM(CASE WHEN u.ADDRESS LIKE '%울산%' THEN 1 ELSE 0 END) AS ulsan,
         SUM(CASE WHEN u.ADDRESS LIKE '%강원%' THEN 1 ELSE 0 END) AS gangwon,
         SUM(CASE WHEN u.ADDRESS LIKE '%충북%' THEN 1 ELSE 0 END) AS chungbuk,
         SUM(CASE WHEN u.ADDRESS LIKE '%충남%' THEN 1 ELSE 0 END) AS chungnam,
         SUM(CASE WHEN u.ADDRESS LIKE '%전북%' THEN 1 ELSE 0 END) AS jeonbuk,
         SUM(CASE WHEN u.ADDRESS LIKE '%전남%' THEN 1 ELSE 0 END) AS jeonnam,
         SUM(CASE WHEN u.ADDRESS LIKE '%경북%' THEN 1 ELSE 0 END) AS kyeongbuk,
         SUM(CASE WHEN u.ADDRESS LIKE '%경남%' THEN 1 ELSE 0 END) AS kyeongnam,
         SUM(CASE WHEN u.ADDRESS LIKE '%제주%' THEN 1 ELSE 0 END) AS JEJU
FROM     USERS u   
JOIN     buying b ON u.ID = b.ID   
WHERE    b.BUYINGDATE >= sysdate - #{sortTime}
GROUP BY b.category
ORDER BY ${sort3} DESC
		]]>
	</select>


</mapper>
